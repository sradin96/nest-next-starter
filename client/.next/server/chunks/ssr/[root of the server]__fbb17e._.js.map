{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefan/next-starter/app/stores/counter-store.ts"],"sourcesContent":["import { createStore } from 'zustand/vanilla';\n\nexport type CounterState = {\n  count: number;\n};\n\nexport type CounterActions = {\n  decrementCount: () => void;\n  incrementCount: () => void;\n};\n\nexport type CounterStore = CounterState & CounterActions;\n\nexport const defaultInitState: CounterState = {\n  count: 0,\n};\n\nexport const createCounterStore = (\n  initState: CounterState = defaultInitState\n) => {\n  return createStore<CounterStore>()((set) => ({\n    ...initState,\n    decrementCount: () => set((state) => ({ count: state.count - 1 })),\n    incrementCount: () => set((state) => ({ count: state.count + 1 })),\n  }));\n};\n"],"names":[],"mappings":";;;;AAAA;;AAaO,MAAM,mBAAiC;IAC5C,OAAO;AACT;AAEO,MAAM,qBAAqB,CAChC,YAA0B,gBAAgB;IAE1C,OAAO,CAAA,GAAA,0IAAA,CAAA,cAAW,AAAD,IAAkB,CAAC,MAAQ,CAAC;YAC3C,GAAG,SAAS;YACZ,gBAAgB,IAAM,IAAI,CAAC,QAAU,CAAC;wBAAE,OAAO,MAAM,KAAK,GAAG;oBAAE,CAAC;YAChE,gBAAgB,IAAM,IAAI,CAAC,QAAU,CAAC;wBAAE,OAAO,MAAM,KAAK,GAAG;oBAAE,CAAC;QAClE,CAAC;AACH"}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 41, "column": 0}, "map": {"version":3,"sources":["file:///Users/stefan/next-starter/app/providers/counter-store-provider.tsx"],"sourcesContent":["'use client';\n\nimport { type ReactNode, createContext, useRef, useContext } from 'react';\nimport { useStore } from 'zustand';\nimport { CounterStore, createCounterStore } from '../stores/counter-store';\n\nexport type CounterStoreApi = ReturnType<typeof createCounterStore>;\n\nexport const CounterStoreContext = createContext<CounterStoreApi | undefined>(\n  undefined\n);\n\nexport interface CounterStoreProviderProps {\n  children: ReactNode;\n}\n\nexport const CounterStoreProvider = ({\n  children,\n}: CounterStoreProviderProps) => {\n  const storeRef = useRef<CounterStoreApi>(null);\n  if (!storeRef.current) {\n    storeRef.current = createCounterStore();\n  }\n\n  return (\n    <CounterStoreContext.Provider value={storeRef.current}>\n      {children}\n    </CounterStoreContext.Provider>\n  );\n};\n\nexport const useCounterStore = <T,>(\n  selector: (store: CounterStore) => T\n): T => {\n  const counterStoreContext = useContext(CounterStoreContext);\n\n  if (!counterStoreContext) {\n    throw new Error(`useCounterStore must be used within CounterStoreProvider`);\n  }\n\n  return useStore(counterStoreContext, selector);\n};\n"],"names":[],"mappings":";;;;;;AAEA;AAEA;AADA;AAHA;;;;;AAQO,MAAM,oCAAsB,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAC7C;AAOK,MAAM,uBAAuB,CAAC,EACnC,QAAQ,EACkB;IAC1B,MAAM,WAAW,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAmB;IACzC,IAAI,CAAC,SAAS,OAAO,EAAE;QACrB,SAAS,OAAO,GAAG,CAAA,GAAA,iIAAA,CAAA,qBAAkB,AAAD;IACtC;IAEA,qBACE,8OAAC,oBAAoB,QAAQ;QAAC,OAAO,SAAS,OAAO;kBAClD;;;;;;AAGP;AAEO,MAAM,kBAAkB,CAC7B;IAEA,MAAM,sBAAsB,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;IAEvC,IAAI,CAAC,qBAAqB;QACxB,MAAM,IAAI,MAAM,CAAC,wDAAwD,CAAC;IAC5E;IAEA,OAAO,CAAA,GAAA,wIAAA,CAAA,WAAQ,AAAD,EAAE,qBAAqB;AACvC"}},
    {"offset": {"line": 77, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}